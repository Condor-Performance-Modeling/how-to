# RVA23 vs GCC 14.x

# GCC options

The GCC options referenced below are here: https://gcc.gnu.org/onlinedocs/gcc/RISC-V-Options.html

# RVA23 vs. GCC Table

## Legend

```
U64 = 64b user level
S64 = 64b supervisor level

ISA?  = exposed new ISA elements, 
         yes | no   yes = has new instructions, no = not a compile switch
        ~yp         consists of pseudo instructions
        ~yn         compile switch, no instructions
        ~yc         compile switch, adds CSR names
        ~yo         compile switch, no instrs, adds compiler constraints/optimizations

Label = this is the GCC -march string component, typically matches conventional extension name
Notes = includes required version of the extension

## Table
```
U64 | S64 | ISA? | Label          | Notes
M   | M   |  y   |   g            |      General-purpose computing base extension, 'g' will expand to 
    |     |  y   |       i        |   2.0, 2.1  Base integer extension.
    |     |  y   |       m        |   2.0       Integer multiplication and division extension.
    |     |  y   |       a        |   2.0, 2.1  Atomic extension.
    |     |  y   |       f        |   2.0, 2.2  Single-precision floating-point extension.
    |     |  y   |       d        |   2.0, 2.2  Double-precision floating-point extension.
    |     |  y   |       zicsr    |   2.0       Control and status register access extension.
 -  |  M  |  y   |       zifencei |   2.0       Instruction-fetch fence extension.
    |     |      |                | 
n/a | n/a |      |   e            |  2.0  Reduced base integer
 M  |  M  |  y   |   c            |  2.0  Compressed
 -  |  M  |  y   |   h            |  1.0  Hypervisor
 M  |  M  |  y   |   v            |  1.0  Vector
 M  |  M  |  y   |   zicond       |  1.0  Integer conditional operations
 M  |  M  |  n   |   za64rs       |  1.0  Reservation set size of 64 bytes.
    |     |  n   |   za128rs      |  1.0  Reservation set size of 128 bytes.
 M  |  M  |  y   |   zawrs        |  1.0  Wait-on-reservation-set
    |     |  y   |   zba          |  1.0  Address calculation
 M  |  M  |  y   |   zbb          |  1.0  Basic bit manipulation
 M  |  M  |  y   |   zbc          |  1.0  Carry-less multiplication
 M  |  M  |  y   |   zbs          |  1.0  Single-bit operation
    |     |      |   zfinx        |  1.0  Single-precision floating-point in integer registers
    |     |      |   zdinx        |  1.0  Double-precision floating-point in integer registers
    |     |      |   zhinx        |  1.0  Half-precision floating-point in integer registers
    |     |      |   zhinxmin     |  1.0  Minimal half-precision floating-point in integer regs
    |     |      |   zbkb         |  1.0  Cryptography bit-manipulation
    |     |      |   zbkc         |  1.0  Cryptography carry-less multiply
    |     |      |   zbkx         |  1.0  Cryptography crossbar permutation
    |     |      |   zkne         |  1.0  AES Encryption
    |     |      |   zknd         |  1.0  AES Decryption
    |     |      |   zknh         |  1.0  Hash function
 -  |  e  |      |   zkr          |  1.0  Entropy source
    |     |      |   zksed        |  1.0  SM4 block cipher
    |     |      |   zksh         |  1.0  SM3 hash function
 M  |  M  |  y   |   zkt          |  1.0  Data independent execution latency
    |     |      |   zk           |  1.0  Standard scalar cryptography
    |     |      |         zkn    |  1.0  NIST algorithm suite
    |     |      |         zks    |  1.0  ShangMi algorithm suite
 M  |  M  |  y   |   zihintntl    |  1.0  Non-temporal locality hints
 M  |  M  |  y   |   zihintpause  |  1.0  Pause hint
 M  |  M  |  y   |   zicboz       |  1.0  Cache-block zero
 M  |  M  |  y   |   zicbom       |  1.0  Cache-block management
 M  |  M  |  y   |   zicbop       |  1.0  Cache-block prefetch
 M  |  M  |  n   |   zic64b       |  1.0  Cache block size isf 64 bytes.
 M  |  M  |  n   |   ziccamoa     |  1.0  Main memory supports all atomics in A.
 M  |  M  |  n   |   ziccif       |  1.0  Main memory supports instr fetch with atomicity requirement.
 M  |  M  |  n   |   zicclsm      |  1.0  Main memory supports misaligned loads/stores.
 M  |  M  |  n   |   ziccrse      |  1.0  Main memory supports forward progress on LR/SC sequences.
 M  |  M  | ~yp  |   zicntr       |  2.0  Standard extension for base counters and timers.
 M  |  M  | ~yc  |   zihpm        |  2.0  Standard extension for hardware performance counters. Requires zicsr.
    |     |      |   ztso         |  1.0  Total store ordering extension.
    |     |      |   zve32x       |  1.0  Vector extensions for embedded processors.
    |     |      |   zve32f       |  1.0  Vector extensions for embedded processors.
    |     |      |   zve64x       |  1.0  Vector extensions for embedded processors.
    |     |      |   zve64f       |  1.0  Vector extensions for embedded processors.
    |     |      |   zve64d       |  1.0  Vector extensions for embedded processors.
 M  |  M  |  n   |   zvl32b       |  1.0  Minimum vector length standard extensions
 M  |  M  |  n   |   zvl64b       |  1.0  Minimum vector length standard extensions
 M  |  M  |  n   |   zvl128b      |  1.0  Minimum vector length standard extensions
    |     |      |   zvl256b      |  1.0  Minimum vector length standard extensions
    |     |      |   zvl512b      |  1.0  Minimum vector length standard extensions
    |     |      |   zvl1024b     |  1.0  Minimum vector length standard extensions
    |     |      |   zvl2048b     |  1.0  Minimum vector length standard extensions
    |     |      |   zvl4096b     |  1.0  Minimum vector length standard extensions
 M  |  M  |  ?   |   zvbb         |  1.0  Vector basic bit-manipulation extension.
    |     |      |   zvknha       |  1.0  Vector SHA-2 secure hash extension.
    |     |      |   zvkn         |  1.0  Vector NIST Algorithm Suite extension, â€˜zvknâ€™ expands to 
    |     |      |       zvkned   |  1.0  Vector AES block cipher extension.
    |     |      |       zvknhb   |  1.0  Vector SHA-2 secure hash extension.
    |     |      |       zvkb     |  1.0  Vector cryptography bit-manipulation extension.
 M  |  M  |  ?   |       zvkt     |  1.0  Vector data independent execution latency extension.
    |     |      |   zvknc        |  1.0  Vector NIST Algor Suite with carryless mul ext, expands to  zvkn, see above
 d  |  d  |      |        zvbc    |  1.0  Vector carryless multiplication extension.
 l  |  l  |      |   zvkng        |  1.0  Vector NIST Algorithm Suite with GCM extension, zvkng will expand to zvkn and zvkg.
    |     |      |       zvkn     |  see above
    |     |      |       zvkg     |  1.0  Vector GCM/GMAC extension.
    |     |      |   zvks         |  1.0  Vector ShangMi algorithm suite extension, 'zvks' will expand to 'zvksed', 'zvksh', 'zvkb', and 'zvkt'.
    |     |      |       zvksed   |  1.0  Vector SM4 Block Cipher extension.
    |     |      |       zvksh    |  1.0  Vector SM3 Secure Hash extension.
    |     |      |   zvksc        |  1.0  Vector ShangMi algorithm suite with carryless multiplication extension, 'zvksc' will expand to 'zvks' and 'zvbc'.
 l  |  l  |      |   zvksg        |  1.0  Vector ShangMi algorithm suite with GCM extension, 'zvksg' will expand to 'zvks' and 'zvkg'.
 e  |  e  |      |   zfh          |  1.0  Half-precision floating-point extension.
 M  |  M  |  y   |   zfhmin       |  1.0  Minimal half-precision floating-point extension.
 e  |  e  |      |   zvfh         |  1.0  Vector half-precision floating-point extension.
 M  |  M  |  y   |   zvfhmin      |  1.0  Vector minimal half-precision floating-point extension.
 e  |  e  |      |   zvfbfmin     |  1.0  Vector BF16 converts extension.
 M  |  M  |  y   |   zfa          |  1.0  Additional floating-point extension.
    |     |      |   zmmul        |  1.0  Integer multiplication extension.
    |     |      |   zca          |  1.0  Integer compressed instruction extension.
    |     |      |   zcf          |  1.0  Compressed single-precision floating point loads and stores extension.
    |     |      |   zcd          |  1.0  Compressed double-precision floating point loads and stores extension.
 M  |  M  |  y   |   zcb          |  1.0  Simple compressed instruction extension.
    |     |      |   zce          |  1.0  Compressed instruction extensions for embedded processors.
    |     |      |   zcmp         |  1.0  Compressed push pop extension.
    |     |      |   zcmt         |  1.0  Table jump instruction extension.
    |     |      |   smaia        |  1.0  Advanced interrupt architecture extension.
    |     |      |   smepmp       |  1.0  PMP Enhancements for memory access and execution prevention on Machine mode.
    |     |      |   smstateen    |  1.0  State enable extension.
    |     |      |   ssaia        |  1.0  Advanced interrupt architecture extension for supervisor-mode.
 -  |  M  | ~yn  |   sscofpmf     |  1.0  Count overflow & filtering extension.
 -  |  M  | ~yc  |   ssstateen    |  1.0  State-enable extension for supervisor-mode.
 -  |  M  | ~yc  |   sstc         |  1.0  Supervisor-mode timer interrupts extension.
 -  |  M  |  y   |   svinval      |  1.0  Fine-grained address-translation cache invalidation extension.
 -  |  M  | ~yo  |   svnapot      |  1.0  NAPOT translation contiguity extension.
 -  |  M  | ~yo  |   svpbmt       |  1.0  Page-based memory types extension.
```

# RVA23: GCC march string for approximation of RVA23

“approximates” because there is no published RVA23 string to my knowledge. I have also added the Cuzco AX66 switches.

```
march=rv64iacdfhmv_smstateen_sscofpmf_ssstateen_sstc_svinval_svnapot_svpbmt_zawrs_zba_zbb_zbc_zbs_zfa_zfhmin_zicbom_zicbop_zicboz_zicntr_zicsr_zifencei_zicond_zihintntl_zihintpause_zihpm_zkt_zk_zkn_zknd_zkne_zknh_zbkb_zbkc_zbkx_smaia
```

# Cuzco: GCC march string for Cuzco approximation of RVA23

NOTE: This is no longer a strict RVA23 option set. We are not exposing vector in this switch set.

```
march=rv64iacdfhm_smstateen_sscofpmf_ssstateen_sstc_svinval_svnapot_svpbmt_zawrs_zba_zbb_zbc_zbs_zfa_zfhmin_zicbom_zicbop_zicboz_zicntr_zicsr_zifencei_zicond_zihintntl_zihintpause_zihpm_zkt_zk_zkn_zknd_zkne_zknh_zbkb_zbkc_zbkx_smaia
```

# Cuzco spreadsheet

The relevant Cuzco spreadsheet is here: https://netorgft12728731.sharepoint.com/:x:/g/ER4fa5YdLRpAnem-hL6HrhIBAZUjQXwhdkAreMlwVzD3vQ?e=t3uNeD

This information is from the 2.0 version of that spreadsheet.

# Extension names with out a compiler switch
Below is an excerpt from the spreadsheet, for the extensions that do not have a compiler switch

```
# -   b              not a real compiler switch
# n/a sdtrig        not an ISA feature
# n/a hcounterenw   not an ISA feature
# n/a hgatp         not an ISA feature
# n/a shgatpa       not an ISA feature
# n/a htval         not an ISA feature
# n/a shtvala       not an ISA feature
# n/a vsatp         not an ISA feature
# n/a shvsatpa      not an ISA feature
# n/a vstvala       not an ISA feature
# n/a Shvstvala     not an ISA feature
# n/a vstvec        not an ISA feature
# n/a shvstvecd     not an ISA feature
# n/a ssccptr       not an ISA feature
# n/a sscounterenw  not an ISA feature
# n/a shcounterenw  not an ISA feature
# n/a sstvala       not an ISA feature
# n/a sstvec        not an ISA feature
# n/a ssu64xl       not an ISA feature
# n/a sv39          not an ISA feature
# n/a svade         not an ISA feature
# n/a svbare        not an ISA feature
# n/a za64rs        not an ISA feature
# n/a zcmop         not stricly an ISA feature, conventional use for maybe-op by writing 0 to rd
# n/a zic64b        not an ISA feature
# n/a ziccamoa      not an ISA feature
# n/a ziccif        not an ISA feature
# n/a zicclsm       not an ISA feature
# n/a ziccrse       not an ISA feature
# n/a zimop         not stricly an ISA feature, conventional use for maybe-op by writing 0 to rd
# n/a sdext         not an ISA feature
# n/a ssnpm         not an ISA feature
# n/a sspm          not an ISA feature
# n/a ssstrict      not an ISA feature
# n/a supm          not an ISA feature
# n/a sv48          not an ISA feature
# n/a sv57          not an ISA feature
# n   sm1p13        not supported by embecosm 14.x
# n/a smmpm         not an ISA feature
# n   ss1p13        not supported by embecosm 14.x
# n/a zama16b       not an ISA feature
# n/a zaamo         not an ISA feature

Not supported by embecosm 14.x

# n   zfbfmin       not supported in Embecosm 14.x
# n   zfh           not supported by embecosm 14.x
```

# Links to Extension documentation

Label          | Notes
  g            | 
  i            | 
  m            | 
  a            | 
  f            | 
  d            | 
  zicsr        | 
  zifencei     | 
  e            | 
  c            | 
  h            |              https://drive.google.com/file/d/17GeetSnT5wW3xNuAHI95-SI1gPGd5sJ_/view
  v            |  Unpriv Spec https://drive.google.com/file/d/1uviu1nH-tScFfgrovvFCrj7Omv8tFtkp/view?usp=drive_link
  zicond       |              https://github.com/riscvarchive/riscv-zicond/blob/main/zicondops.adoc
  za64rs       | 
  za128rs      | 
  zawrs        | 
  zba          |              https://github.com/riscv/riscv-bitmanip/blob/main/bitmanip/bitmanip.adoc
  zbb          |              https://github.com/riscv/riscv-bitmanip/blob/main/bitmanip/bitmanip.adoc
  zbc          | 
  zbs          |              https://github.com/riscv/riscv-bitmanip/blob/main/bitmanip/bitmanip.adoc
  zfinx        | 
  zdinx        | 
  zhinx        | 
  zhinxmin     | 
  zbkb         | 
  zbkc         | 
  zbkx         | 
  zkne         | 
  zknd         | 
  zknh         | 
  zkr          | 
  zksed        | 
  zksh         | 
  zkt          |   https://github.com/riscv/riscv-crypto/releases/download/v1.0.1-scalar/riscv-crypto-spec-scalar-v1.0.1.pdf
  zk           | 
        zkn    | 
        zks    | 
  zihintntl    |  https://github.com/riscv/riscv-isa-manual/blob/main/src/zihintntl.adoc
  zihintpause  |  https://github.com/riscv/riscv-isa-manual/blob/main/src/zihintpause.adoc
  zicboz       |  https://github.com/riscv/riscv-CMOs/blob/master/cmobase/Zicbom.adoc
  zicbom       |  https://github.com/riscv/riscv-CMOs/blob/master/cmobase/Zicbom.adoc
  zicbop       |  https://github.com/riscv/riscv-CMOs/blob/master/cmobase/Zicbom.adoc
  zic64b       | 
  ziccamoa     | 
  ziccif       | 
  zicclsm      | 
  ziccrse      | 
  zicntr       |  https://five-embeddev.com/riscv-user-isa-manual/Priv-v1.12/counters.html
  zihpm        | 
  ztso         | 
  zve32x       | 
  zve32f       | 
  zve64x       | 
  zve64f       | 
  zve64d       | 
  zvl32b       | 
  zvl64b       | 
  zvl128b      | 
  zvl256b      | 
  zvl512b      | 
  zvl1024b     | 
  zvl2048b     | 
  zvl4096b     | 
  zvbb         |  https://github.com/riscv/riscv-isa-manual/blob/main/src/vector-crypto.adoc
  zvknha       | 
  zvkn         | 
      zvkned   | 
      zvknhb   | 
      zvkb     | 
      zvkt     |  https://riscv-software-src.github.io/riscv-unified-db/manual/html/isa/20240411/exts/Zkt.html
  zvknc        | 
       zvbc    | 
  zvkng        | 
      zvkn     | 
      zvkg     | 
  zvks         | 
      zvksed   | 
      zvksh    | 
  zvksc        | 
  zvksg        | 
  zfh          | 
  zfhmin       | 
  zvfh         | 
  zvfhmin      |  https://riscv-software-src.github.io/riscv-unified-db/manual/html/isa/20240411/chapters/zfh.html
  zvfbfmin     | 
  zfa          |  https://github.com/riscv/riscv-isa-manual/blob/main/src/zfa.adoc
  zmmul        | 
  zca          | 
  zcf          | 
  zcd          | 
  zcb          |  https://riscv-software-src.github.io/riscv-unified-db/manual/html/isa/20240411/chapters/zc.html
  zce          | 
  zcmp         | 
  zcmt         | 
  smaia        | 
  smepmp       | 
  smstateen    |  https://riscv-software-src.github.io/riscv-unified-db/manual/html/isa/20240411/chapters/smstateen.html
  ssaia        | 
  sscofpmf     |  https://tools.cloudbear.ru/docs/riscv-sscofpmf-0.5.2-20211013.pdf
  ssstateen    | 
  sstc         |            https://riscv-software-src.github.io/riscv-unified-db/manual/html/isa/20240411/chapters/sstc.html
  svinval      |  Priv Spec https://drive.google.com/file/d/17GeetSnT5wW3xNuAHI95-SI1gPGd5sJ_/view?usp=drive_link
  svnapot      |            https://riscv-software-src.github.io/riscv-unified-db/manual/html/isa/20240411/exts/Svnapot.html
  svpbmt       |  Priv Spec https://drive.google.com/file/d/17GeetSnT5wW3xNuAHI95-SI1gPGd5sJ_/view?usp=drive_link
